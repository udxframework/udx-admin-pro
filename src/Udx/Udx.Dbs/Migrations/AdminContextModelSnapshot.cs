// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Udx.Admin;

#nullable disable

namespace Udx.Dbs.Migrations
{
    [DbContext(typeof(AdminContext))]
    partial class AdminContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Udx.Dbs.Entities.ConfigDetailEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(0)
                        .HasComment("主键Id");

                    b.Property<string>("ConfigDetailKey")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("键Key");

                    b.Property<string>("ConfigDetailTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("键标题");

                    b.Property<string>("ConfigDetailValue")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("值Value");

                    b.Property<string>("ConfigId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasComment("配置父表Id");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6)
                        .HasComment("创建时间");

                    b.Property<string>("CreatedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(4)
                        .HasComment("创建者Id");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(5)
                        .HasComment("创建者");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("描述");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(3)
                        .HasComment("是否删除");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9)
                        .HasComment("修改时间");

                    b.Property<string>("ModifiedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(7)
                        .HasComment("修改者Id");

                    b.Property<string>("ModifiedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(8)
                        .HasComment("修改者");

                    b.Property<decimal>("Sort")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("排序");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("状态");

                    b.Property<string>("TenantId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(1)
                        .HasComment("租户Id");

                    b.Property<long>("Version")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2)
                        .HasComment("版本");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "TenantId", "ConfigDetailKey" }, "Index_ConfigDetail_TenantId")
                        .IsUnique()
                        .HasFilter("[TenantId] IS NOT NULL AND [ConfigDetailKey] IS NOT NULL");

                    b.ToTable("udx_admin_config_detail");

                    b.HasComment("配置子表");
                });

            modelBuilder.Entity("Udx.Dbs.Entities.ConfigEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(0)
                        .HasComment("主键Id");

                    b.Property<string>("ConfigKey")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("键Key");

                    b.Property<string>("ConfigTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("键标题");

                    b.Property<string>("ConfigValue")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("值Value");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6)
                        .HasComment("创建时间");

                    b.Property<string>("CreatedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(4)
                        .HasComment("创建者Id");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(5)
                        .HasComment("创建者");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("描述");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(3)
                        .HasComment("是否删除");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9)
                        .HasComment("修改时间");

                    b.Property<string>("ModifiedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(7)
                        .HasComment("修改者Id");

                    b.Property<string>("ModifiedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(8)
                        .HasComment("修改者");

                    b.Property<string>("ParentId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasComment("父Id");

                    b.Property<decimal>("Sort")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("排序");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("状态");

                    b.Property<string>("TenantId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(1)
                        .HasComment("租户Id");

                    b.Property<long>("Version")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2)
                        .HasComment("版本");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "TenantId", "ConfigKey" }, "Index_Config_TenantId")
                        .IsUnique()
                        .HasFilter("[TenantId] IS NOT NULL AND [ConfigKey] IS NOT NULL");

                    b.ToTable("udx_admin_config");

                    b.HasComment("配置表");
                });

            modelBuilder.Entity("Udx.Dbs.Entities.EventDataEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(0)
                        .HasComment("主键Id");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6)
                        .HasComment("创建时间");

                    b.Property<string>("CreatedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(4)
                        .HasComment("创建者Id");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(5)
                        .HasComment("创建者");

                    b.Property<string>("EventData")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("消息事件数据");

                    b.Property<string>("EventId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(3)
                        .HasComment("是否删除");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9)
                        .HasComment("修改时间");

                    b.Property<string>("ModifiedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(7)
                        .HasComment("修改者Id");

                    b.Property<string>("ModifiedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(8)
                        .HasComment("修改者");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResultMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResultStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubscriberDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubscriberType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(1)
                        .HasComment("租户Id");

                    b.Property<long>("Version")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2)
                        .HasComment("版本");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "TenantId", "EventId" }, "Index_EventData_TenantId");

                    b.ToTable("udx_eventbus_eventdata");

                    b.HasComment("事件数据表");
                });

            modelBuilder.Entity("Udx.Dbs.Entities.LogInfoEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(0)
                        .HasComment("主键Id");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6)
                        .HasComment("创建时间");

                    b.Property<string>("CreatedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(4)
                        .HasComment("创建者Id");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(5)
                        .HasComment("创建者");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("日志说明");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(3)
                        .HasComment("是否删除");

                    b.Property<string>("LogType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("日志分类");

                    b.Property<string>("Logger")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("日志数据");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9)
                        .HasComment("修改时间");

                    b.Property<string>("ModifiedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(7)
                        .HasComment("修改者Id");

                    b.Property<string>("ModifiedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(8)
                        .HasComment("修改者");

                    b.Property<string>("TenantId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(1)
                        .HasComment("租户Id");

                    b.Property<long>("Version")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2)
                        .HasComment("版本");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "TenantId", "LogType" }, "Index_Log_TenantId_LogType");

                    b.ToTable("udx_log_info");

                    b.HasComment("日志表");
                });

            modelBuilder.Entity("Udx.Dbs.Entities.ModuleEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(0)
                        .HasComment("主键Id");

                    b.Property<string>("Actions")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("模块Actions");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6)
                        .HasComment("创建时间");

                    b.Property<string>("CreatedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(4)
                        .HasComment("创建者Id");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(5)
                        .HasComment("创建者");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("描述");

                    b.Property<bool>("HideInMenu")
                        .HasColumnType("bit")
                        .HasComment("是否隐藏");

                    b.Property<string>("Icon")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("模块Icon");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(3)
                        .HasComment("是否删除");

                    b.Property<string>("Key")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("模块Key");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9)
                        .HasComment("修改时间");

                    b.Property<string>("ModifiedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(7)
                        .HasComment("修改者Id");

                    b.Property<string>("ModifiedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(8)
                        .HasComment("修改者");

                    b.Property<string>("ModuleType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("模块分类");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("模块名称");

                    b.Property<string>("ParentId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasComment("父Id");

                    b.Property<string>("Path")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("模块路由Path");

                    b.Property<decimal>("Sort")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("排序");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("状态");

                    b.Property<string>("TenantId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(1)
                        .HasComment("租户Id");

                    b.Property<long>("Version")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2)
                        .HasComment("版本");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "TenantId", "Id" }, "Index_Module_TenantId_ModuleKey");

                    b.ToTable("udx_admin_module");

                    b.HasComment("模块表");
                });

            modelBuilder.Entity("Udx.Dbs.Entities.NumberEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(0)
                        .HasComment("主键Id");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6)
                        .HasComment("创建时间");

                    b.Property<string>("CreatedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(4)
                        .HasComment("创建者Id");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(5)
                        .HasComment("创建者");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(3)
                        .HasComment("是否删除");

                    b.Property<string>("LastNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("最后生成的流水号");

                    b.Property<int>("MaxNumber")
                        .HasColumnType("int")
                        .HasComment("当前最大流水号");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9)
                        .HasComment("修改时间");

                    b.Property<string>("ModifiedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(7)
                        .HasComment("修改者Id");

                    b.Property<string>("ModifiedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(8)
                        .HasComment("修改者");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("名称");

                    b.Property<string>("Template")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("模板");

                    b.Property<string>("TenantId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(1)
                        .HasComment("租户Id");

                    b.Property<long>("Version")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2)
                        .HasComment("版本");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "TenantId", "Name" }, "Index_udx_admin_number")
                        .IsUnique()
                        .HasFilter("[TenantId] IS NOT NULL AND [Name] IS NOT NULL");

                    b.ToTable("udx_admin_number");

                    b.HasComment("流水号规则配置表");
                });

            modelBuilder.Entity("Udx.Dbs.Entities.OrgEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(0)
                        .HasComment("主键Id");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6)
                        .HasComment("创建时间");

                    b.Property<string>("CreatedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(4)
                        .HasComment("创建者Id");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(5)
                        .HasComment("创建者");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("描述");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(3)
                        .HasComment("是否删除");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9)
                        .HasComment("修改时间");

                    b.Property<string>("ModifiedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(7)
                        .HasComment("修改者Id");

                    b.Property<string>("ModifiedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(8)
                        .HasComment("修改者");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("组织机构代码");

                    b.Property<string>("OrgName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("组织机构名称");

                    b.Property<string>("ParentId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasComment("父Id");

                    b.Property<decimal>("Sort")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("排序");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("状态");

                    b.Property<string>("TenantId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(1)
                        .HasComment("租户Id");

                    b.Property<long>("Version")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2)
                        .HasComment("版本");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "TenantId", "OrgCode" }, "Index_Org_TenantId")
                        .IsUnique()
                        .HasFilter("[TenantId] IS NOT NULL AND [OrgCode] IS NOT NULL");

                    b.ToTable("udx_admin_org");

                    b.HasComment("组织机构");
                });

            modelBuilder.Entity("Udx.Dbs.Entities.OrgUserEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(0)
                        .HasComment("主键Id");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6)
                        .HasComment("创建时间");

                    b.Property<string>("CreatedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(4)
                        .HasComment("创建者Id");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(5)
                        .HasComment("创建者");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(3)
                        .HasComment("是否删除");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9)
                        .HasComment("修改时间");

                    b.Property<string>("ModifiedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(7)
                        .HasComment("修改者Id");

                    b.Property<string>("ModifiedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(8)
                        .HasComment("修改者");

                    b.Property<string>("OrgId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasComment("组织机构Id");

                    b.Property<string>("TenantId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(1)
                        .HasComment("租户Id");

                    b.Property<string>("UserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasComment("用户Id");

                    b.Property<long>("Version")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2)
                        .HasComment("版本");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "TenantId", "OrgId", "UserId" }, "Index_Org_UserId")
                        .IsUnique()
                        .HasFilter("[TenantId] IS NOT NULL AND [OrgId] IS NOT NULL AND [UserId] IS NOT NULL");

                    b.ToTable("udx_admin_org_user");

                    b.HasComment("组织机构用户");
                });

            modelBuilder.Entity("Udx.Dbs.Entities.RoleEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(0)
                        .HasComment("主键Id");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6)
                        .HasComment("创建时间");

                    b.Property<string>("CreatedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(4)
                        .HasComment("创建者Id");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(5)
                        .HasComment("创建者");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("说明");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(3)
                        .HasComment("是否删除");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9)
                        .HasComment("修改时间");

                    b.Property<string>("ModifiedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(7)
                        .HasComment("修改者Id");

                    b.Property<string>("ModifiedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(8)
                        .HasComment("修改者");

                    b.Property<string>("ModuleType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("模块分类");

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("名称");

                    b.Property<decimal>("Sort")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("排序");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("状态");

                    b.Property<string>("TenantId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(1)
                        .HasComment("租户Id");

                    b.Property<long>("Version")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2)
                        .HasComment("版本");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "TenantId", "RoleName" }, "Index_Role_TenantId")
                        .IsUnique()
                        .HasFilter("[TenantId] IS NOT NULL AND [RoleName] IS NOT NULL");

                    b.ToTable("udx_admin_role");

                    b.HasComment("角色表");
                });

            modelBuilder.Entity("Udx.Dbs.Entities.RoleModuleEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(0)
                        .HasComment("主键Id");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6)
                        .HasComment("创建时间");

                    b.Property<string>("CreatedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(4)
                        .HasComment("创建者Id");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(5)
                        .HasComment("创建者");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(3)
                        .HasComment("是否删除");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9)
                        .HasComment("修改时间");

                    b.Property<string>("ModifiedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(7)
                        .HasComment("修改者Id");

                    b.Property<string>("ModifiedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(8)
                        .HasComment("修改者");

                    b.Property<string>("ModuleActions")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("模块Actions");

                    b.Property<string>("ModuleId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasComment("模块Id");

                    b.Property<string>("RoleId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasComment("角色Id");

                    b.Property<string>("TenantId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(1)
                        .HasComment("租户Id");

                    b.Property<long>("Version")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2)
                        .HasComment("版本");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "TenantId", "RoleId", "ModuleId" }, "Index_Role_ModuleId")
                        .IsUnique()
                        .HasFilter("[TenantId] IS NOT NULL AND [RoleId] IS NOT NULL AND [ModuleId] IS NOT NULL");

                    b.ToTable("udx_admin_role_module");

                    b.HasComment("角色模块表");
                });

            modelBuilder.Entity("Udx.Dbs.Entities.RoleUserEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(0)
                        .HasComment("主键Id");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6)
                        .HasComment("创建时间");

                    b.Property<string>("CreatedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(4)
                        .HasComment("创建者Id");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(5)
                        .HasComment("创建者");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(3)
                        .HasComment("是否删除");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9)
                        .HasComment("修改时间");

                    b.Property<string>("ModifiedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(7)
                        .HasComment("修改者Id");

                    b.Property<string>("ModifiedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(8)
                        .HasComment("修改者");

                    b.Property<string>("RoleId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasComment("角色Id");

                    b.Property<string>("TenantId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(1)
                        .HasComment("租户Id");

                    b.Property<string>("UserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasComment("用户Id");

                    b.Property<long>("Version")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2)
                        .HasComment("版本");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "TenantId", "RoleId", "UserId" }, "Index_Role_UserId")
                        .IsUnique()
                        .HasFilter("[TenantId] IS NOT NULL AND [RoleId] IS NOT NULL AND [UserId] IS NOT NULL");

                    b.ToTable("udx_admin_role_user");

                    b.HasComment("角色用户表");
                });

            modelBuilder.Entity("Udx.Dbs.Entities.TenantEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(0)
                        .HasComment("主键Id");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("编码");

                    b.Property<string>("ConnectionString")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("连接字符串");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6)
                        .HasComment("创建时间");

                    b.Property<string>("CreatedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(4)
                        .HasComment("创建者Id");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(5)
                        .HasComment("创建者");

                    b.Property<string>("DbType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("数据库类型");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("说明");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(3)
                        .HasComment("是否删除");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9)
                        .HasComment("修改时间");

                    b.Property<string>("ModifiedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(7)
                        .HasComment("修改者Id");

                    b.Property<string>("ModifiedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(8)
                        .HasComment("修改者");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("名称");

                    b.Property<decimal>("Sort")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("排序");

                    b.Property<string>("TenantId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(1)
                        .HasComment("租户Id");

                    b.Property<long>("Version")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2)
                        .HasComment("版本");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "Index_Tenant_Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("udx_admin_tenant");

                    b.HasComment("租户表");
                });

            modelBuilder.Entity("Udx.Dbs.Entities.UserConfigEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(0)
                        .HasComment("主键Id");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6)
                        .HasComment("创建时间");

                    b.Property<string>("CreatedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(4)
                        .HasComment("创建者Id");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(5)
                        .HasComment("创建者");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit")
                        .HasComment("是否管理员");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(3)
                        .HasComment("是否删除");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9)
                        .HasComment("修改时间");

                    b.Property<string>("ModifiedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(7)
                        .HasComment("修改者Id");

                    b.Property<string>("ModifiedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(8)
                        .HasComment("修改者");

                    b.Property<string>("ParentId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasComment("用户Id");

                    b.Property<string>("TenantId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(1)
                        .HasComment("租户Id");

                    b.Property<string>("Theme")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("主题皮肤");

                    b.Property<string>("UserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasComment("用户Id");

                    b.Property<long>("Version")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2)
                        .HasComment("版本");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "TenantId", "UserId" }, "Index_UserConfig_TenantId")
                        .IsUnique()
                        .HasFilter("[TenantId] IS NOT NULL AND [UserId] IS NOT NULL");

                    b.ToTable("udx_admin_user_config");

                    b.HasComment("用户配置表");
                });

            modelBuilder.Entity("Udx.Dbs.Entities.UserEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(0)
                        .HasComment("主键Id");

                    b.Property<string>("Address")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasComment("Address");

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("头像");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Country");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6)
                        .HasComment("创建时间");

                    b.Property<string>("CreatedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(4)
                        .HasComment("创建者Id");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(5)
                        .HasComment("创建者");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("描述");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Email");

                    b.Property<string>("IsAdmin")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("是否数据权限超级用户");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(3)
                        .HasComment("是否删除");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9)
                        .HasComment("修改时间");

                    b.Property<string>("ModifiedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(7)
                        .HasComment("修改者Id");

                    b.Property<string>("ModifiedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(8)
                        .HasComment("修改者");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("姓名");

                    b.Property<string>("NickName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("昵称");

                    b.Property<string>("OrgId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasComment("默认组织机构Id");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Phone");

                    b.Property<string>("RegionCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("区域代码RegionCode");

                    b.Property<string>("Signature")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasComment("Signature");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("状态");

                    b.Property<string>("TenantId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(1)
                        .HasComment("租户Id");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("账号");

                    b.Property<long>("Version")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2)
                        .HasComment("版本");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "TenantId", "UserName" }, "Index_User_TenantId")
                        .IsUnique()
                        .HasFilter("[TenantId] IS NOT NULL AND [UserName] IS NOT NULL");

                    b.ToTable("udx_admin_user");

                    b.HasComment("用户表");
                });

            modelBuilder.Entity("Udx.Dbs.Entities.UserOAuthEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(0)
                        .HasComment("主键Id");

                    b.Property<string>("Avatar")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasComment("头像");

                    b.Property<string>("BindStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("绑定状态(已绑定/未绑定)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6)
                        .HasComment("创建时间");

                    b.Property<string>("CreatedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(4)
                        .HasComment("创建者Id");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(5)
                        .HasComment("创建者");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(3)
                        .HasComment("是否删除");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9)
                        .HasComment("修改时间");

                    b.Property<string>("ModifiedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(7)
                        .HasComment("修改者Id");

                    b.Property<string>("ModifiedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(8)
                        .HasComment("修改者");

                    b.Property<string>("MsgTip")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("消息提醒(已开启/未开启)");

                    b.Property<string>("NickName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("昵称");

                    b.Property<string>("OAuthName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("OAuthName");

                    b.Property<string>("OAuthResult")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("绑定结果");

                    b.Property<string>("Openid")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Openid");

                    b.Property<string>("TenantId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(1)
                        .HasComment("租户Id");

                    b.Property<string>("Unionid")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Unionid");

                    b.Property<string>("UserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasComment("用户Id");

                    b.Property<long>("Version")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2)
                        .HasComment("版本");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "TenantId", "UserId", "OAuthName" }, "Index_User__OAuthName_TenantId")
                        .IsUnique()
                        .HasFilter("[TenantId] IS NOT NULL AND [UserId] IS NOT NULL AND [OAuthName] IS NOT NULL");

                    b.ToTable("udx_admin_user_oauth");

                    b.HasComment("用户账户OAuth绑定表");
                });

            modelBuilder.Entity("Udx.Dbs.Entities.UserPasswordEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(0)
                        .HasComment("主键Id");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6)
                        .HasComment("创建时间");

                    b.Property<string>("CreatedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(4)
                        .HasComment("创建者Id");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(5)
                        .HasComment("创建者");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(3)
                        .HasComment("是否删除");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9)
                        .HasComment("修改时间");

                    b.Property<string>("ModifiedUserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(7)
                        .HasComment("修改者Id");

                    b.Property<string>("ModifiedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(8)
                        .HasComment("修改者");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("登录密码");

                    b.Property<string>("Password1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("密码1");

                    b.Property<string>("Password2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("密码2");

                    b.Property<string>("Password3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("密码3");

                    b.Property<string>("TenantId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(1)
                        .HasComment("租户Id");

                    b.Property<string>("UserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasComment("用户Id");

                    b.Property<long>("Version")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2)
                        .HasComment("版本");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "TenantId", "UserId" }, "Index_UserPassword_UserId")
                        .IsUnique()
                        .HasFilter("[TenantId] IS NOT NULL AND [UserId] IS NOT NULL");

                    b.ToTable("udx_admin_user_password");
                });
#pragma warning restore 612, 618
        }
    }
}
